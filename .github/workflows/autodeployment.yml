name: Golang APP Deployment CI CD

#akan melkaukan deploy ketika push ke branch main
on:
  push:
    branches:
      - main

#jalankan docker dan install
jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
    - 
      name: Checkout
      uses: actions/checkout@v3
    -
      name: Set up QEMU
      uses: docker/setup-qemu-action@v2
    -
      name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    #Login to docker hub
    -
      name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.MY_DOCKERHUB_USERNAME }}
        password: ${{ secrets.MY_DOCKERHUB_TOKEN }}
    #build dan push dockerfile kedalam dockerhub
    -
      name: Build and push
      uses: docker/build-push-action@v4
      with:
        context: .
        file: ./Dockerfile
        push: true
        tags: ${{ secrets.MY_DOCKERHUB_USERNAME }}/go_docker_test:latest
        #melakukan deploy menggunakan docker
  deploy-prod:
    runs-on: ubuntu-latest
    needs: docker
    steps:
      #connect kedalam server menggunakan SSH
      - name: Connect to server using SSH
        uses: sptndngrh/ssh-action@v0.1.10
        with:
          host: ${{ secrets.HOST }} 
          username: ${{ secrets.USERNAME}} 
          key: ${{ secrets.KEY }} 
          port: ${{ secrets.PORT }} 
          script: |
            docker stop data
            docker rm data
            docker rmi ${{ secrets.MY_DOCKERHUB_USERNAME }}/datadocker:latest
            docker pull ${{ secrets.MY_DOCKERHUB_USERNAME }}/datadocker:latest
            docker run -d -p 8080:8080 -e SERVERPORT=${{ secrets.DBPORT }} -e DBUSER=${{ secrets.DBUSER }} -e DBPASS=${{ secrets.DBPASS }} -e DBHOST=${{ secrets.DBHOST }} -e DBPORT=${{ secrets.DBPORT }} -e DBNAME=${{ secrets.DBNAME }} --name restapi ${{ secrets.MY_DOCKERHUB_USERNAME }}/datadocker:latest